group = 'com.nablarch.framework'
version = '1.0.1'
description = 'ファイル、DBに依存する機能（ファイルアップロード→DB、CSVファイルダウンロードなど）'


buildscript {
  repositories {
    mavenLocal()
    maven { url "${developLibUrl}" }
    jcenter()
  }
  dependencies {
    classpath "com.nablarch.dev:nablarch-gradle-plugin:${nablarchGradlePluginVersion}"
    classpath "net.saliman:gradle-cobertura-plugin:${coberturaPluginVersion}"
  }
}
apply plugin: 'com.nablarch.dev.nablarch-build'
apply plugin: 'com.nablarch.dev.nablarch-maven-deploy'
apply plugin: 'com.nablarch.dev.nablarch-sonarqube'
apply plugin: 'com.nablarch.dev.nablarch-version'
apply from: 'https://github.com/nablarch/nablarch-gradle-plugin/blob/develop/scripts/cobertura/cobertura-0.0.1.gradle?raw=true'

// ビルド時のJavaバージョンを指定する
sourceCompatibility=JavaVersion.VERSION_1_6
targetCompatibility=JavaVersion.VERSION_1_6

dependencies {
  compile "com.nablarch.framework:nablarch-fw-web:${nablarchFwWebVersion}"
  compile "com.nablarch.framework:nablarch-core-jdbc:${nablarchCoreJdbcVersion}"
  compile "com.nablarch.framework:nablarch-core-dataformat:${nablarchCoreDataformatVersion}"

  testCompile 'org.jmockit:jmockit:1.31'
  testCompile 'junit:junit:4.12'
  testCompile 'org.hamcrest:hamcrest-all:1.3'

  testRuntime files('src/test/java/')
}

test {
  jvmArgs (
          '-Xms16m',
          '-Xmx32m',
          '-XX:PermSize=32m',
          '-XX:+UseParallelGC',
          '-Dfile.encoding=UTF-8',
          '-XX:-UseSplitVerifier'
  )

  ignoreFailures = true

  beforeTest { descriptor ->
    logger.lifecycle("Running test: " + descriptor)
  }
}

tasks.sonarRunner {
  dependsOn = ['coverage']
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.13'
}

